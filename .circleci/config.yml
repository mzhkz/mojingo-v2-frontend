version: 2
jobs:
  build_and_deploy:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.9

    working_directory: ~/repo
    environment:
      BUILD_APP: ./config ./dist ./server ./node_modules # 成果物
      HOST_NAME: 104.199.186.211 # デプロイ先のホスト名
      USER_NAME: mojingo_app  # デプロイ先のユーザー名
      APP_DIR: /opt/mojingov2/frontend/build/ #デプロイ先のディレクトリ
      SERVICE_NAME: mojingov2-frontend
      MOJINGOV2_API_BASE_URL: https://api-v2.mojingo.me
      MOJINGOV2_APP_SERVICE_ACCOUNT: sheet-request@mojingo-v2-prod.iam.gserviceaccount.com

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run build!
      - run:
          name: build
          command: yarn build:prod
        # 設定した秘密鍵のFingerPrintを追記する
      - add_ssh_keys:
          fingerprints:
            - "d0:7e:4a:d2:97:8e:d4:43:13:67:d1:d3:7c:a8:97:8c"
      - deploy:
          name: deployment
          command: |
            ssh-keyscan ${HOST_NAME} >> ~/.ssh/known_hosts
            sudo apt install -y rsync
            echo ${SERVICE_NAME} サービスを終了します。
            ssh ${USER_NAME}@${HOST_NAME} "sudo systemctl stop ${SERVICE_NAME} " # サービスを停止する
            echo ビルドデータをデプロイしています...
            rsync -au ${BUILD_APP} ${USER_NAME}@${HOST_NAME}:${APP_DIR} # 成果物をデプロイする
            echo デプロイが完了しました。
            echo ${SERVICE_NAME} サービスを起動します。
            ssh ${USER_NAME}@${HOST_NAME} "sudo systemctl start ${SERVICE_NAME} " # サービスを起動する
workflows:
  version: 2
  build_and_deploy: # workflow名
    jobs:
      - build_and_deploy:
          #          requires: # buildとtestが成功したら
          #            - build
          #            - test
          filters:
            branches: # masterブランチのみ実行する
              only:
                - master
